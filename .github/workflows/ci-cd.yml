name: CI/CD

on:
  push:
    branches: [ "**" ]

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - run: npm ci
      - run: npm test -- --reporter=junit --reporter-options "mochaFile=report.xml" || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-report
          path: report.xml

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: dist

  deploy:
    name: Deploy (staging)
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging
      url: https://staging.example.com
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build
          path: ./artifact
      - run: |
          echo "Deploying to ${{ github.environment }} with token: ${DEPLOY_TOKEN:0:4} ****"
          ls -la ./artifact
          echo "Deploy success"
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
